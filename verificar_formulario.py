from app import create_app
from models import Formulario, CampoFormulario, Evento, Usuario
from extensions import db

app = create_app()

with app.app_context():
    print("=== VERIFICA√á√ÉO DO FORMUL√ÅRIO DE TRABALHOS ===")
    
    # Buscar formul√°rio de trabalhos pelo ID 9
    formulario = Formulario.query.get(9)
    if not formulario:
        print("‚ùå Formul√°rio ID 9 n√£o encontrado!")
    else:
        print(f"‚úÖ Formul√°rio encontrado - ID: {formulario.id}, Nome: {formulario.nome}")
        
        # Verificar campos do formul√°rio
        campos = formulario.campos
        print(f"\nCampos do formul√°rio ({len(campos)}):")
        
        campos_obrigatorios = []
        for campo in campos:
            print(f"  - ID: {campo.id}, Nome: {campo.nome}, Tipo: {campo.tipo}, Obrigat√≥rio: {campo.obrigatorio}")
            if campo.opcoes:
                print(f"    Op√ß√µes: {campo.opcoes}")
            if campo.obrigatorio:
                campos_obrigatorios.append(campo.nome)
        
        print(f"\nCampos obrigat√≥rios: {campos_obrigatorios}")
    
    print("\n=== VERIFICA√á√ÉO DE EVENTOS COM FORMUL√ÅRIO DE TRABALHOS ===")
    
    # Buscar eventos que t√™m o formul√°rio de trabalhos associado
    eventos_com_formulario = []
    todos_eventos = Evento.query.all()
    
    for evento in todos_eventos:
        formularios_evento = list(evento.formularios)
        for form in formularios_evento:
            if form.id == 9:  # Formul√°rio de Trabalhos
                eventos_com_formulario.append(evento)
                break
    
    print(f"Eventos com formul√°rio de trabalhos ({len(eventos_com_formulario)}):")
    for evento in eventos_com_formulario:
        print(f"  - ID: {evento.id}, Nome: {evento.nome}, Status: {evento.status}")
    
    print("\n=== VERIFICA√á√ÉO DO USU√ÅRIO ANDRE ===")
    
    # Buscar usu√°rio andre@teste.com
    usuario = Usuario.query.filter_by(email='andre@teste.com').first()
    if usuario:
        print(f"‚úÖ Usu√°rio encontrado - ID: {usuario.id}, Email: {usuario.email}")
        print(f"   Evento associado diretamente: {usuario.evento_id}")
        
        # Verificar evento associado diretamente
        if usuario.evento_id:
            evento = Evento.query.get(usuario.evento_id)
            if evento:
                print(f"\nEvento do usu√°rio: ID {evento.id}, Nome: {evento.nome}, Status: {evento.status}")
                
                # Verificar formul√°rios do evento
                formularios = list(evento.formularios)
                print(f"Formul√°rios associados ({len(formularios)}):")
                for form in formularios:
                    print(f"  - ID: {form.id}, Nome: {form.nome}")
                    if form.id == 9:
                        print(f"    ‚úÖ Este evento tem o formul√°rio de trabalhos!")
        else:
            print("   Usu√°rio n√£o tem evento associado diretamente.")
    else:
        print("‚ùå Usu√°rio andre@teste.com n√£o encontrado!")
    
    print("\n=== VERIFICA√á√ÉO ESPEC√çFICA DO EVENTO 12 ===")
    
    evento = Evento.query.get(12)
    if evento:
        print(f"Evento ID 12: {evento.nome}")
        formularios = list(evento.formularios)
        print(f"Formul√°rios associados:")
        for form in formularios:
            print(f"  - ID: {form.id}, Nome: {form.nome}")
        
        # Verificar se precisa associar o formul√°rio de trabalhos
        tem_formulario_trabalhos = any(f.id == 9 for f in formularios)
        if not tem_formulario_trabalhos:
            print("\n‚ö†Ô∏è PROBLEMA IDENTIFICADO: Evento 12 n√£o tem o formul√°rio de trabalhos associado!")
            print("   Isso explica por que o cadastro de trabalhos falha.")
            print("   Solu√ß√£o: Associar o formul√°rio ID 9 ao evento ID 12.")
    
    print("\n=== TODOS OS EVENTOS E SEUS FORMUL√ÅRIOS ===")
    
    todos_eventos = Evento.query.all()
    for evento in todos_eventos:
        formularios = list(evento.formularios)
        print(f"Evento ID {evento.id} ({evento.nome}):")
        if formularios:
            for form in formularios:
                print(f"  - Formul√°rio ID {form.id}: {form.nome}")
        else:
            print(f"  - Nenhum formul√°rio associado")
    
    print("\n=== DIAGN√ìSTICO FINAL ===")
    
    # Verificar se o usu√°rio andre est√° no evento 12
    usuario_andre = Usuario.query.filter_by(email='andre@teste.com').first()
    if usuario_andre and usuario_andre.evento_id == 12:
        print("‚úÖ Usu√°rio andre est√° associado ao evento 12")
        
        # Verificar se evento 12 tem formul√°rio de trabalhos
        evento_12 = Evento.query.get(12)
        if evento_12:
            formularios_12 = list(evento_12.formularios)
            tem_form_trabalhos = any(f.id == 9 for f in formularios_12)
            
            if not tem_form_trabalhos:
                print("‚ùå CAUSA DO ERRO: Evento 12 n√£o tem o formul√°rio de trabalhos (ID 9) associado!")
                print("   O usu√°rio est√° tentando cadastrar trabalho em um evento que n√£o suporta isso.")
                print("\nüîß SOLU√á√ÉO NECESS√ÅRIA:")
                print("   1. Associar o formul√°rio de trabalhos (ID 9) ao evento 12")
                print("   2. OU associar o usu√°rio a um evento que j√° tenha o formul√°rio de trabalhos")
            else:
                print("‚úÖ Evento 12 tem o formul√°rio de trabalhos associado")
    else:
        print("‚ÑπÔ∏è Usu√°rio andre n√£o est√° associado ao evento 12 ou n√£o foi encontrado")