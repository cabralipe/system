"""add monitor table

Revision ID: 052f91a854b7
Revises: 36a58e54b28a
Create Date: 2025-08-23 12:45:51.732083

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '052f91a854b7'
down_revision = '36a58e54b28a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('monitor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome_completo', sa.String(length=255), nullable=False),
    sa.Column('curso', sa.String(length=255), nullable=False),
    sa.Column('carga_horaria_disponibilidade', sa.Integer(), nullable=False),
    sa.Column('dias_disponibilidade', sa.String(length=255), nullable=False),
    sa.Column('turnos_disponibilidade', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('telefone_whatsapp', sa.String(length=20), nullable=False),
    sa.Column('codigo_acesso', sa.String(length=10), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_monitor_cliente_id_cliente')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_monitor')),
    sa.UniqueConstraint('codigo_acesso', name=op.f('uq_monitor_codigo_acesso')),
    sa.UniqueConstraint('email', name=op.f('uq_monitor_email'))
    )
    op.create_table('revisor_process_evento',
    sa.Column('process_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_revisor_process_evento_evento_id_evento')),
    sa.ForeignKeyConstraint(['process_id'], ['revisor_process.id'], name=op.f('fk_revisor_process_evento_process_id_revisor_process')),
    sa.PrimaryKeyConstraint('process_id', 'evento_id', name=op.f('pk_revisor_process_evento'))
    )
    op.create_table('participante_evento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('data_inscricao', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_participante_evento_evento_id_evento')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_participante_evento_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_participante_evento'))
    )
    op.create_table('monitor_agendamento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monitor_id', sa.Integer(), nullable=False),
    sa.Column('agendamento_id', sa.Integer(), nullable=False),
    sa.Column('data_atribuicao', sa.DateTime(), nullable=True),
    sa.Column('tipo_distribuicao', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['agendamento_id'], ['agendamento_visita.id'], name=op.f('fk_monitor_agendamento_agendamento_id_agendamento_visita')),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitor.id'], name=op.f('fk_monitor_agendamento_monitor_id_monitor')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_monitor_agendamento'))
    )
    op.create_table('presenca_aluno',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aluno_id', sa.Integer(), nullable=False),
    sa.Column('monitor_id', sa.Integer(), nullable=False),
    sa.Column('agendamento_id', sa.Integer(), nullable=False),
    sa.Column('presente', sa.Boolean(), nullable=True),
    sa.Column('data_registro', sa.DateTime(), nullable=True),
    sa.Column('metodo_confirmacao', sa.String(length=20), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['agendamento_id'], ['agendamento_visita.id'], name=op.f('fk_presenca_aluno_agendamento_id_agendamento_visita')),
    sa.ForeignKeyConstraint(['aluno_id'], ['aluno_visitante.id'], name=op.f('fk_presenca_aluno_aluno_id_aluno_visitante')),
    sa.ForeignKeyConstraint(['monitor_id'], ['monitor.id'], name=op.f('fk_presenca_aluno_monitor_id_monitor')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_presenca_aluno'))
    )
    op.drop_table('review_email_log')
    with op.batch_alter_table('evento_barema', schema=None) as batch_op:
        batch_op.drop_constraint('uq_evento_barema_evento_id', type_='unique')

    with op.batch_alter_table('formularios', schema=None) as batch_op:
        batch_op.alter_column('is_submission_form',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))

    with op.batch_alter_table('revisor_process', schema=None) as batch_op:
        batch_op.add_column(sa.Column('evento_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_revisor_process_evento_id_evento'), 'evento', ['evento_id'], ['id'])

    with op.batch_alter_table('revisor_process_evento_association', schema=None) as batch_op:
        batch_op.add_column(sa.Column('revisor_process_id', sa.Integer(), nullable=False))
        batch_op.drop_constraint('fk_revisor_process_evento_association_process_id_reviso_3fff', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_revisor_process_evento_association_revisor_process_id_revisor_process'), 'revisor_process', ['revisor_process_id'], ['id'])
        batch_op.drop_column('process_id')

    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.add_column(sa.Column('attributes', sa.JSON(), nullable=True))

    with op.batch_alter_table('work_metadata', schema=None) as batch_op:
        batch_op.add_column(sa.Column('data', sa.JSON(), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_metadata', schema=None) as batch_op:
        batch_op.drop_column('data')

    with op.batch_alter_table('submission', schema=None) as batch_op:
        batch_op.drop_column('attributes')

    with op.batch_alter_table('revisor_process_evento_association', schema=None) as batch_op:
        batch_op.add_column(sa.Column('process_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_revisor_process_evento_association_revisor_process_id_revisor_process'), type_='foreignkey')
        batch_op.create_foreign_key('fk_revisor_process_evento_association_process_id_reviso_3fff', 'revisor_process', ['process_id'], ['id'])
        batch_op.drop_column('revisor_process_id')

    with op.batch_alter_table('revisor_process', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_revisor_process_evento_id_evento'), type_='foreignkey')
        batch_op.drop_column('evento_id')

    with op.batch_alter_table('formularios', schema=None) as batch_op:
        batch_op.alter_column('is_submission_form',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))

    with op.batch_alter_table('evento_barema', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_evento_barema_evento_id', ['evento_id'])

    op.create_table('review_email_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('review_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('recipient', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('error', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['review.id'], name='fk_review_email_log_review_id_review'),
    sa.PrimaryKeyConstraint('id', name='pk_review_email_log')
    )
    op.drop_table('presenca_aluno')
    op.drop_table('monitor_agendamento')
    op.drop_table('participante_evento')
    op.drop_table('revisor_process_evento')
    op.drop_table('monitor')
    # ### end Alembic commands ###
