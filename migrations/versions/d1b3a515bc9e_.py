"""empty message

Revision ID: d1b3a515bc9e
Revises: db2839740a7d
Create Date: 2025-08-24 23:58:54.503739

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd1b3a515bc9e'
down_revision = 'db2839740a7d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('certificado_template_avancado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('tipo', sa.String(length=20), nullable=False),
    sa.Column('conteudo_html', sa.Text(), nullable=False),
    sa.Column('variaveis_disponiveis', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('padrao', sa.Boolean(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_certificado_template_avancado_cliente_id_cliente')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_certificado_template_avancado'))
    )
    op.create_table('declaracao_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('tipo', sa.String(length=20), nullable=False),
    sa.Column('conteudo', sa.Text(), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_declaracao_template_cliente_id_cliente')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_declaracao_template'))
    )
    op.create_table('material_apoio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=150), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_material_apoio_cliente_id_cliente')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_material_apoio'))
    )
    op.create_table('variavel_dinamica',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=50), nullable=False),
    sa.Column('descricao', sa.String(length=200), nullable=True),
    sa.Column('valor_padrao', sa.Text(), nullable=True),
    sa.Column('tipo', sa.String(length=20), nullable=True),
    sa.Column('opcoes', sa.JSON(), nullable=True),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_variavel_dinamica_cliente_id_cliente')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_variavel_dinamica'))
    )
    op.create_table('certificado_config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('liberacao_automatica', sa.Boolean(), nullable=True),
    sa.Column('permitir_solicitacao_manual', sa.Boolean(), nullable=True),
    sa.Column('notificar_participantes', sa.Boolean(), nullable=True),
    sa.Column('carga_horaria_minima', sa.Integer(), nullable=True),
    sa.Column('percentual_presenca_minimo', sa.Float(), nullable=True),
    sa.Column('checkins_minimos', sa.Integer(), nullable=True),
    sa.Column('validar_oficinas_obrigatorias', sa.Boolean(), nullable=True),
    sa.Column('oficinas_participadas_minimas', sa.Integer(), nullable=True),
    sa.Column('exigir_atividades_obrigatorias', sa.Boolean(), nullable=True),
    sa.Column('exigir_aprovacao_manual', sa.Boolean(), nullable=True),
    sa.Column('aprovacao_automatica_se_criterios', sa.Boolean(), nullable=True),
    sa.Column('prazo_liberacao_automatica', sa.DateTime(), nullable=True),
    sa.Column('prazo_solicitacao_manual', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_certificado_config_cliente_id_cliente')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_certificado_config_evento_id_evento')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_certificado_config'))
    )
    op.create_table('config_certificado_avancada',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('liberacao_individual', sa.Boolean(), nullable=True),
    sa.Column('liberacao_geral', sa.Boolean(), nullable=True),
    sa.Column('liberacao_simultanea', sa.Boolean(), nullable=True),
    sa.Column('liberacao_automatica', sa.Boolean(), nullable=True),
    sa.Column('incluir_atividades_sem_inscricao', sa.Boolean(), nullable=True),
    sa.Column('carga_horaria_minima', sa.Integer(), nullable=True),
    sa.Column('percentual_presenca_minimo', sa.Integer(), nullable=True),
    sa.Column('exigir_checkin_minimo', sa.Boolean(), nullable=True),
    sa.Column('validar_oficinas_obrigatorias', sa.Boolean(), nullable=True),
    sa.Column('acesso_participante', sa.Boolean(), nullable=True),
    sa.Column('acesso_admin', sa.Boolean(), nullable=True),
    sa.Column('acesso_cliente', sa.Boolean(), nullable=True),
    sa.Column('requer_aprovacao_manual', sa.Boolean(), nullable=True),
    sa.Column('notificar_participante', sa.Boolean(), nullable=True),
    sa.Column('notificar_admin', sa.Boolean(), nullable=True),
    sa.Column('prazo_liberacao_dias', sa.Integer(), nullable=True),
    sa.Column('data_limite_emissao', sa.DateTime(), nullable=True),
    sa.Column('template_individual_id', sa.Integer(), nullable=True),
    sa.Column('template_geral_id', sa.Integer(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_config_certificado_avancada_cliente_id_cliente')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_config_certificado_avancada_evento_id_evento')),
    sa.ForeignKeyConstraint(['template_geral_id'], ['certificado_template_avancado.id'], name=op.f('fk_config_certificado_avancada_template_geral_id_certificado_template_avancado')),
    sa.ForeignKeyConstraint(['template_individual_id'], ['certificado_template_avancado.id'], name=op.f('fk_config_certificado_avancada_template_individual_id_certificado_template_avancado')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_config_certificado_avancada'))
    )
    op.create_table('regra_certificado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('prioridade', sa.Integer(), nullable=True),
    sa.Column('condicoes', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('acoes', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.Column('data_atualizacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_regra_certificado_cliente_id_cliente')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_regra_certificado_evento_id_evento')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_regra_certificado'))
    )
    op.create_table('certificado_participante',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('oficina_id', sa.Integer(), nullable=True),
    sa.Column('tipo', sa.String(length=20), nullable=False),
    sa.Column('liberado', sa.Boolean(), nullable=True),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('carga_horaria', sa.Integer(), nullable=False),
    sa.Column('data_emissao', sa.DateTime(), nullable=True),
    sa.Column('data_liberacao', sa.DateTime(), nullable=True),
    sa.Column('arquivo_path', sa.String(length=500), nullable=True),
    sa.Column('hash_verificacao', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_certificado_participante_evento_id_evento')),
    sa.ForeignKeyConstraint(['oficina_id'], ['oficina.id'], name=op.f('fk_certificado_participante_oficina_id_oficina')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_certificado_participante_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_certificado_participante'))
    )
    op.create_table('declaracao_comparecimento',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('conteudo', sa.Text(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('data_liberacao', sa.DateTime(), nullable=True),
    sa.Column('data_emissao', sa.DateTime(), nullable=True),
    sa.Column('liberado_por', sa.Integer(), nullable=True),
    sa.Column('requer_checkin', sa.Boolean(), nullable=True),
    sa.Column('liberacao_automatica', sa.Boolean(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_declaracao_comparecimento_cliente_id_cliente')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_declaracao_comparecimento_evento_id_evento')),
    sa.ForeignKeyConstraint(['liberado_por'], ['usuario.id'], name=op.f('fk_declaracao_comparecimento_liberado_por_usuario')),
    sa.ForeignKeyConstraint(['template_id'], ['declaracao_template.id'], name=op.f('fk_declaracao_comparecimento_template_id_declaracao_template')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_declaracao_comparecimento_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_declaracao_comparecimento'))
    )
    op.create_table('historico_certificado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('oficina_id', sa.Integer(), nullable=True),
    sa.Column('tipo_certificado', sa.String(length=20), nullable=False),
    sa.Column('template_usado_id', sa.Integer(), nullable=True),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('carga_horaria_total', sa.Integer(), nullable=False),
    sa.Column('atividades_participadas', sa.JSON(), nullable=True),
    sa.Column('data_emissao', sa.DateTime(), nullable=True),
    sa.Column('emitido_por', sa.Integer(), nullable=True),
    sa.Column('arquivo_path', sa.String(length=500), nullable=True),
    sa.Column('hash_verificacao', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['emitido_por'], ['usuario.id'], name=op.f('fk_historico_certificado_emitido_por_usuario')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_historico_certificado_evento_id_evento')),
    sa.ForeignKeyConstraint(['oficina_id'], ['oficina.id'], name=op.f('fk_historico_certificado_oficina_id_oficina')),
    sa.ForeignKeyConstraint(['template_usado_id'], ['certificado_template_avancado.id'], name=op.f('fk_historico_certificado_template_usado_id_certificado_template_avancado')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_historico_certificado_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_historico_certificado'))
    )
    op.create_table('notificacao_certificado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('titulo', sa.String(length=200), nullable=False),
    sa.Column('mensagem', sa.Text(), nullable=False),
    sa.Column('lida', sa.Boolean(), nullable=True),
    sa.Column('data_criacao', sa.DateTime(), nullable=True),
    sa.Column('data_leitura', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_notificacao_certificado_evento_id_evento')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_notificacao_certificado_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_notificacao_certificado'))
    )
    op.create_table('solicitacao_certificado',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('oficina_id', sa.Integer(), nullable=True),
    sa.Column('tipo_certificado', sa.String(length=20), nullable=False),
    sa.Column('justificativa', sa.Text(), nullable=True),
    sa.Column('dados_participacao', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('data_solicitacao', sa.DateTime(), nullable=True),
    sa.Column('data_resposta', sa.DateTime(), nullable=True),
    sa.Column('aprovado_por', sa.Integer(), nullable=True),
    sa.Column('observacoes_aprovacao', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['aprovado_por'], ['usuario.id'], name=op.f('fk_solicitacao_certificado_aprovado_por_usuario')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_solicitacao_certificado_evento_id_evento')),
    sa.ForeignKeyConstraint(['oficina_id'], ['oficina.id'], name=op.f('fk_solicitacao_certificado_oficina_id_oficina')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_solicitacao_certificado_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_solicitacao_certificado'))
    )
    op.create_table('aluno_material_apoio_association',
    sa.Column('aluno_id', sa.Integer(), nullable=False),
    sa.Column('material_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['aluno_id'], ['aluno_visitante.id'], name=op.f('fk_aluno_material_apoio_association_aluno_id_aluno_visitante')),
    sa.ForeignKeyConstraint(['material_id'], ['material_apoio.id'], name=op.f('fk_aluno_material_apoio_association_material_id_material_apoio')),
    sa.PrimaryKeyConstraint('aluno_id', 'material_id', name=op.f('pk_aluno_material_apoio_association'))
    )
    op.create_table('necessidade_especial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('aluno_id', sa.Integer(), nullable=False),
    sa.Column('tipo', sa.String(length=50), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=False),
    sa.Column('data_registro', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['aluno_id'], ['aluno_visitante.id'], name=op.f('fk_necessidade_especial_aluno_id_aluno_visitante')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_necessidade_especial')),
    sa.UniqueConstraint('aluno_id', name=op.f('uq_necessidade_especial_aluno_id'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('necessidade_especial')
    op.drop_table('aluno_material_apoio_association')
    op.drop_table('solicitacao_certificado')
    op.drop_table('notificacao_certificado')
    op.drop_table('historico_certificado')
    op.drop_table('declaracao_comparecimento')
    op.drop_table('certificado_participante')
    op.drop_table('regra_certificado')
    op.drop_table('config_certificado_avancada')
    op.drop_table('certificado_config')
    op.drop_table('variavel_dinamica')
    op.drop_table('material_apoio')
    op.drop_table('declaracao_template')
    op.drop_table('certificado_template_avancado')
    # ### end Alembic commands ###
