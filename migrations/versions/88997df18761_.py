"""empty message

Revision ID: 88997df18761
Revises: 2b3d589e50dc
Create Date: 2025-09-24 01:58:49.388651

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '88997df18761'
down_revision = '2b3d589e50dc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuracao_relatorio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=200), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('tipo', sa.Enum('ATIVIDADE', 'MENSAL', 'TRIMESTRAL', 'ANUAL', name='tiporelatorio'), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('obrigatorio', sa.Boolean(), nullable=True),
    sa.Column('frequencia_dias', sa.Integer(), nullable=True),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_configuracao_relatorio_cliente_id_cliente')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_configuracao_relatorio'))
    )
    op.create_table('atividade_multipla_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(length=255), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('carga_horaria_total', sa.String(length=10), nullable=False),
    sa.Column('tipo_atividade', sa.String(length=50), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=True),
    sa.Column('permitir_checkin_multiplas_datas', sa.Boolean(), nullable=True),
    sa.Column('gerar_lista_frequencia', sa.Boolean(), nullable=True),
    sa.Column('exigir_presenca_todas_datas', sa.Boolean(), nullable=True),
    sa.Column('estado', sa.String(length=2), nullable=False),
    sa.Column('cidade', sa.String(length=100), nullable=False),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_atividade_multipla_data_cliente_id_cliente')),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_atividade_multipla_data_evento_id_evento')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_atividade_multipla_data'))
    )
    op.create_table('campo_relatorio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nome', sa.String(length=100), nullable=False),
    sa.Column('label', sa.String(length=200), nullable=False),
    sa.Column('tipo', sa.Enum('TEXTO', 'NUMERO', 'DATA', 'SELECAO', 'MULTIPLA_ESCOLHA', 'ARQUIVO', 'TEXTO_LONGO', name='tipocampo'), nullable=False),
    sa.Column('obrigatorio', sa.Boolean(), nullable=True),
    sa.Column('ordem', sa.Integer(), nullable=True),
    sa.Column('opcoes', sa.Text(), nullable=True),
    sa.Column('placeholder', sa.String(length=200), nullable=True),
    sa.Column('validacao', sa.Text(), nullable=True),
    sa.Column('configuracao_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['configuracao_id'], ['configuracao_relatorio.id'], name=op.f('fk_campo_relatorio_configuracao_id_configuracao_relatorio')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_campo_relatorio'))
    )
    op.create_table('categoria_barema',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('evento_id', sa.Integer(), nullable=False),
    sa.Column('categoria', sa.String(length=255), nullable=False),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('criterios', sa.JSON(), nullable=False),
    sa.Column('ativo', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['evento_id'], ['evento.id'], name=op.f('fk_categoria_barema_evento_id_evento')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_categoria_barema'))
    )
    op.create_table('atividade_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('atividade_id', sa.Integer(), nullable=False),
    sa.Column('data', sa.Date(), nullable=False),
    sa.Column('horario_inicio', sa.Time(), nullable=False),
    sa.Column('horario_fim', sa.Time(), nullable=False),
    sa.Column('palavra_chave_manha', sa.String(length=50), nullable=True),
    sa.Column('palavra_chave_tarde', sa.String(length=50), nullable=True),
    sa.Column('carga_horaria_data', sa.String(length=10), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['atividade_id'], ['atividade_multipla_data.id'], name=op.f('fk_atividade_data_atividade_id_atividade_multipla_data')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_atividade_data'))
    )
    op.create_table('atividade_ministrantes_association',
    sa.Column('atividade_id', sa.Integer(), nullable=False),
    sa.Column('ministrante_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['atividade_id'], ['atividade_multipla_data.id'], name=op.f('fk_atividade_ministrantes_association_atividade_id_atividade_multipla_data')),
    sa.ForeignKeyConstraint(['ministrante_id'], ['ministrante.id'], name=op.f('fk_atividade_ministrantes_association_ministrante_id_ministrante')),
    sa.PrimaryKeyConstraint('atividade_id', 'ministrante_id', name=op.f('pk_atividade_ministrantes_association'))
    )
    op.create_table('perguntas_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cliente_id', sa.Integer(), nullable=False),
    sa.Column('oficina_id', sa.Integer(), nullable=True),
    sa.Column('atividade_id', sa.Integer(), nullable=True),
    sa.Column('titulo', sa.String(length=255), nullable=False),
    sa.Column('descricao', sa.Text(), nullable=True),
    sa.Column('tipo', sa.Enum('TEXTO_LIVRE', 'MULTIPLA_ESCOLHA', 'ESCALA_NUMERICA', 'SIM_NAO', name='tipopergunta'), nullable=False),
    sa.Column('opcoes', sa.Text(), nullable=True),
    sa.Column('obrigatoria', sa.Boolean(), nullable=True),
    sa.Column('ordem', sa.Integer(), nullable=True),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cliente_id'], ['cliente.id'], name=op.f('fk_perguntas_feedback_cliente_id_cliente')),
    sa.ForeignKeyConstraint(['oficina_id'], ['oficina.id'], name=op.f('fk_perguntas_feedback_oficina_id_oficina')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_perguntas_feedback'))
    )
    op.create_table('relatorio_formador_legacy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('configuracao_id', sa.Integer(), nullable=False),
    sa.Column('formador_id', sa.Integer(), nullable=False),
    sa.Column('atividade_id', sa.Integer(), nullable=True),
    sa.Column('periodo_inicio', sa.Date(), nullable=True),
    sa.Column('periodo_fim', sa.Date(), nullable=True),
    sa.Column('dados_relatorio', sa.JSON(), nullable=False),
    sa.Column('data_envio', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['atividade_id'], ['oficina.id'], name=op.f('fk_relatorio_formador_legacy_atividade_id_oficina')),
    sa.ForeignKeyConstraint(['configuracao_id'], ['configuracao_relatorio_formador.id'], name=op.f('fk_relatorio_formador_legacy_configuracao_id_configuracao_relatorio_formador')),
    sa.ForeignKeyConstraint(['formador_id'], ['ministrante.id'], name=op.f('fk_relatorio_formador_legacy_formador_id_ministrante')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_relatorio_formador_legacy'))
    )
    op.create_table('checkin_atividade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('atividade_id', sa.Integer(), nullable=False),
    sa.Column('data_atividade_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('data_hora', sa.DateTime(), nullable=True),
    sa.Column('palavra_chave', sa.String(length=50), nullable=False),
    sa.Column('turno', sa.String(length=10), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['atividade_id'], ['atividade_multipla_data.id'], name=op.f('fk_checkin_atividade_atividade_id_atividade_multipla_data')),
    sa.ForeignKeyConstraint(['data_atividade_id'], ['atividade_data.id'], name=op.f('fk_checkin_atividade_data_atividade_id_atividade_data')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_checkin_atividade_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_checkin_atividade'))
    )
    op.create_table('feedback_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('oficina_id', sa.Integer(), nullable=False),
    sa.Column('ativa', sa.Boolean(), nullable=True),
    sa.Column('respondida', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['oficina_id'], ['oficina.id'], name=op.f('fk_feedback_sessions_oficina_id_oficina')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_feedback_sessions_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_feedback_sessions')),
    sa.UniqueConstraint('token', name=op.f('uq_feedback_sessions_token'))
    )
    op.create_table('frequencia_atividade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('atividade_id', sa.Integer(), nullable=False),
    sa.Column('data_atividade_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('presente_manha', sa.Boolean(), nullable=True),
    sa.Column('presente_tarde', sa.Boolean(), nullable=True),
    sa.Column('presente_dia_inteiro', sa.Boolean(), nullable=True),
    sa.Column('data_checkin_manha', sa.DateTime(), nullable=True),
    sa.Column('data_checkin_tarde', sa.DateTime(), nullable=True),
    sa.Column('palavra_chave_usada_manha', sa.String(length=50), nullable=True),
    sa.Column('palavra_chave_usada_tarde', sa.String(length=50), nullable=True),
    sa.Column('observacoes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['atividade_id'], ['atividade_multipla_data.id'], name=op.f('fk_frequencia_atividade_atividade_id_atividade_multipla_data')),
    sa.ForeignKeyConstraint(['data_atividade_id'], ['atividade_data.id'], name=op.f('fk_frequencia_atividade_data_atividade_id_atividade_data')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_frequencia_atividade_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_frequencia_atividade'))
    )
    op.create_table('historico_relatorio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('relatorio_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('usuario_tipo', sa.String(length=20), nullable=False),
    sa.Column('acao', sa.String(length=50), nullable=False),
    sa.Column('detalhes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['relatorio_id'], ['relatorio_formador.id'], name=op.f('fk_historico_relatorio_relatorio_id_relatorio_formador')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_historico_relatorio'))
    )
    op.create_table('resposta_campo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('relatorio_id', sa.Integer(), nullable=False),
    sa.Column('campo_id', sa.Integer(), nullable=False),
    sa.Column('valor', sa.Text(), nullable=True),
    sa.Column('arquivo_path', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['campo_id'], ['campo_relatorio.id'], name=op.f('fk_resposta_campo_campo_id_campo_relatorio')),
    sa.ForeignKeyConstraint(['relatorio_id'], ['relatorio_formador.id'], name=op.f('fk_resposta_campo_relatorio_id_relatorio_formador')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resposta_campo'))
    )
    op.create_table('respostas_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pergunta_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('oficina_id', sa.Integer(), nullable=False),
    sa.Column('resposta_texto', sa.Text(), nullable=True),
    sa.Column('resposta_numerica', sa.Integer(), nullable=True),
    sa.Column('resposta_escolha', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['oficina_id'], ['oficina.id'], name=op.f('fk_respostas_feedback_oficina_id_oficina')),
    sa.ForeignKeyConstraint(['pergunta_id'], ['perguntas_feedback.id'], name=op.f('fk_respostas_feedback_pergunta_id_perguntas_feedback')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_respostas_feedback_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_respostas_feedback'))
    )
    op.create_table('teste_barema',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('barema_id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=False),
    sa.Column('pontuacoes', sa.JSON(), nullable=False),
    sa.Column('total_pontos', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['barema_id'], ['categoria_barema.id'], name=op.f('fk_teste_barema_barema_id_categoria_barema')),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuario.id'], name=op.f('fk_teste_barema_usuario_id_usuario')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_teste_barema'))
    )
    op.create_table('avaliacao_barema',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trabalho_id', sa.Integer(), nullable=False),
    sa.Column('revisor_id', sa.Integer(), nullable=False),
    sa.Column('nome_revisor', sa.String(length=255), nullable=True),
    sa.Column('barema_id', sa.Integer(), nullable=False),
    sa.Column('categoria', sa.String(length=255), nullable=False),
    sa.Column('nota_final', sa.Float(), nullable=True),
    sa.Column('data_avaliacao', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['revisor_id'], ['usuario.id'], name=op.f('fk_avaliacao_barema_revisor_id_usuario')),
    sa.ForeignKeyConstraint(['trabalho_id'], ['submission.id'], name=op.f('fk_avaliacao_barema_trabalho_id_submission')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_avaliacao_barema'))
    )
    op.create_table('avaliacao_criterio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('avaliacao_id', sa.Integer(), nullable=False),
    sa.Column('criterio_id', sa.String(length=255), nullable=False),
    sa.Column('nota', sa.Float(), nullable=False),
    sa.Column('observacao', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['avaliacao_id'], ['avaliacao_barema.id'], name=op.f('fk_avaliacao_criterio_avaliacao_id_avaliacao_barema')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_avaliacao_criterio'))
    )
    with op.batch_alter_table('checkin', schema=None) as batch_op:
        batch_op.add_column(sa.Column('atividade_multipla_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('data_atividade_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('turno', sa.String(length=10), nullable=True))
        batch_op.add_column(sa.Column('ip_address', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('user_agent', sa.Text(), nullable=True))
        batch_op.create_index(batch_op.f('ix_checkin_atividade_multipla_id'), ['atividade_multipla_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_checkin_data_atividade_id'), ['data_atividade_id'], unique=False)
        batch_op.create_foreign_key(batch_op.f('fk_checkin_atividade_multipla_id_atividade_multipla_data'), 'atividade_multipla_data', ['atividade_multipla_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_checkin_data_atividade_id_atividade_data'), 'atividade_data', ['data_atividade_id'], ['id'])

    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fornecedor', sa.String(length=255), nullable=True))

    with op.batch_alter_table('monitor_cadastro_link', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                'usage_count',
                sa.Integer(),
                nullable=False,
                server_default='0',
            )
        )

    op.execute("UPDATE monitor_cadastro_link SET usage_count = 1 WHERE used IS TRUE")

    with op.batch_alter_table('monitor_cadastro_link', schema=None) as batch_op:
        batch_op.alter_column(
            'usage_count',
            existing_type=sa.Integer(),
            server_default=None,
        )
        batch_op.drop_column('used')

    with op.batch_alter_table('oficina', schema=None) as batch_op:
        batch_op.add_column(sa.Column('formador_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_oficina_formador_id_ministrante'), 'ministrante', ['formador_id'], ['id'])

    with op.batch_alter_table('relatorio_formador', schema=None) as batch_op:
        batch_op.add_column(sa.Column('oficina_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('observacoes_cliente', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('data_aprovacao', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('periodo_inicio',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('periodo_fim',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('data_envio',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.drop_constraint('fk_relatorio_formador_configuracao_id_configuracao_rela_e433', type_='foreignkey')
        batch_op.drop_constraint('fk_relatorio_formador_atividade_id_oficina', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_relatorio_formador_oficina_id_oficina'), 'oficina', ['oficina_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_relatorio_formador_configuracao_id_configuracao_relatorio'), 'configuracao_relatorio', ['configuracao_id'], ['id'])
        batch_op.drop_column('dados_relatorio')
        batch_op.drop_column('atividade_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('relatorio_formador', schema=None) as batch_op:
        batch_op.add_column(sa.Column('atividade_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('dados_relatorio', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
        batch_op.drop_constraint(batch_op.f('fk_relatorio_formador_configuracao_id_configuracao_relatorio'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_relatorio_formador_oficina_id_oficina'), type_='foreignkey')
        batch_op.create_foreign_key('fk_relatorio_formador_atividade_id_oficina', 'oficina', ['atividade_id'], ['id'])
        batch_op.create_foreign_key('fk_relatorio_formador_configuracao_id_configuracao_rela_e433', 'configuracao_relatorio_formador', ['configuracao_id'], ['id'])
        batch_op.alter_column('data_envio',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.alter_column('periodo_fim',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.alter_column('periodo_inicio',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')
        batch_op.drop_column('data_aprovacao')
        batch_op.drop_column('observacoes_cliente')
        batch_op.drop_column('status')
        batch_op.drop_column('oficina_id')

    with op.batch_alter_table('oficina', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_oficina_formador_id_ministrante'), type_='foreignkey')
        batch_op.drop_column('formador_id')

    with op.batch_alter_table('monitor_cadastro_link', schema=None) as batch_op:
        batch_op.add_column(sa.Column('used', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_column('usage_count')

    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.drop_column('fornecedor')

    with op.batch_alter_table('checkin', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_checkin_data_atividade_id_atividade_data'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_checkin_atividade_multipla_id_atividade_multipla_data'), type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_checkin_data_atividade_id'))
        batch_op.drop_index(batch_op.f('ix_checkin_atividade_multipla_id'))
        batch_op.drop_column('user_agent')
        batch_op.drop_column('ip_address')
        batch_op.drop_column('turno')
        batch_op.drop_column('data_atividade_id')
        batch_op.drop_column('atividade_multipla_id')

    op.drop_table('avaliacao_criterio')
    op.drop_table('avaliacao_barema')
    op.drop_table('teste_barema')
    op.drop_table('respostas_feedback')
    op.drop_table('resposta_campo')
    op.drop_table('historico_relatorio')
    op.drop_table('frequencia_atividade')
    op.drop_table('feedback_sessions')
    op.drop_table('checkin_atividade')
    op.drop_table('relatorio_formador_legacy')
    op.drop_table('perguntas_feedback')
    op.drop_table('atividade_ministrantes_association')
    op.drop_table('atividade_data')
    op.drop_table('categoria_barema')
    op.drop_table('campo_relatorio')
    op.drop_table('atividade_multipla_data')
    op.drop_table('configuracao_relatorio')
    # ### end Alembic commands ###
